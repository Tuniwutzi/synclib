// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from directory_tree.djinni

#pragma once

#include "CompareResult.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeCompareResult final {
public:
    using CppType = ::synclib::CompareResult;
    using JniType = jobject;

    using Boxed = NativeCompareResult;

    ~NativeCompareResult();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeCompareResult();
    friend ::djinni::JniClass<NativeCompareResult>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("de/jb/synclib/CompareResult") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V") };
    const jfieldID field_mOnlyInA { ::djinni::jniGetFieldID(clazz.get(), "mOnlyInA", "Ljava/util/ArrayList;") };
    const jfieldID field_mOnlyInB { ::djinni::jniGetFieldID(clazz.get(), "mOnlyInB", "Ljava/util/ArrayList;") };
    const jfieldID field_mConflicting { ::djinni::jniGetFieldID(clazz.get(), "mConflicting", "Ljava/util/ArrayList;") };
};

}  // namespace djinni_generated
