// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from stream.djinni

#pragma once

#include "InputStream.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeInputStream final : ::djinni::JniInterface<::synclib::InputStream, NativeInputStream> {
public:
    using CppType = std::shared_ptr<::synclib::InputStream>;
    using CppOptType = std::shared_ptr<::synclib::InputStream>;
    using JniType = jobject;

    using Boxed = NativeInputStream;

    ~NativeInputStream();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeInputStream>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeInputStream>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeInputStream();
    friend ::djinni::JniClass<NativeInputStream>;
    friend ::djinni::JniInterface<::synclib::InputStream, NativeInputStream>;

};

}  // namespace djinni_generated
